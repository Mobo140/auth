syntax = "proto3";

package user_v1;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/wrappers.proto";
import "google/api/annotations.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

option go_package = "github.com/Mobo140/auth/pkg/user_v1;user_v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    info: {
        title: "User API"
        version: "1.0.0"
        contact: {
            name: "Brusnikin Nikita"
            email: "brusnikinna@my.msu.ru"
        };
    };

    host: "localhost:8090"
    schemes: HTTP,
    schemes: HTTPS,
    consumes: "application/json",
    produces: "application/json",
};

service UserV1 {
    // Creating new user
    rpc Create(CreateRequest) returns (CreateResponse){
        option (google.api.http) = {
            post: "/user/v1"
            body: "*"
        };
    }
    // Get user
    rpc Get(GetRequest) returns (GetResponse){
        option (google.api.http) = {
            get: "/user/v1"
        };
    }
    //Get users
    rpc GetUsers(GetUsersRequest) returns (GetUsersResponse) {
        option (google.api.http) = {
            get: "/users/v1"
        };
    }
    // Update user info
    rpc Update(UpdateRequest) returns (google.protobuf.Empty){
        option (google.api.http) = {
            patch: "/user/v1"
            body: "*"
        };
    }
    // Delete user
    rpc Delete(DeleteRequest) returns (google.protobuf.Empty){
        option (google.api.http) = {
            delete: "/user/v1"
        };
    }
}

enum Role {
    USER = 0;
    ADMIN = 1;
}

message User {
    // User's name
    string name = 1 [(validate.rules).string = {min_len: 3, max_len: 20}];
    // User's email
    string email = 2 [(validate.rules).string = {email: true}];
    // User's password
    string password = 3 [(validate.rules).string = {min_len: 8}];
    // Confirm User's password
    string password_confirm = 4;
    // User's role
    Role role = 5;

}

message UserInfo {
    // User's id
    int64 id = 1; 
    // User's name
    string name = 2;
    // User's email
    string email = 3; 
    // User's role
    Role role = 4;
    // Date of create
    google.protobuf.Timestamp created_at = 5;
    // Date of last update 
    google.protobuf.Timestamp updated_at = 6;
}

message UpdateUserInfo {
    // User's name
    google.protobuf.StringValue  name = 1;
    // User's email
    google.protobuf.StringValue  email = 2;
}

message CreateRequest {
    User user = 1;
}

message CreateResponse {
    int64 id = 1;
}

message GetRequest {
    int64 id = 1 [(validate.rules).int64 = {gt: 0}];
}

message GetResponse {
    UserInfo info = 1;
}

message GetUsersRequest {
    int64 limit = 1 [(validate.rules).int64 = {gt: 0}];
    int64 offset = 2 [(validate.rules).int64 = {gt: -1}];
}

message GetUsersResponse {
    repeated UserInfo users = 1;
}

message UpdateRequest {
    int64 id = 1 [(validate.rules).int64 = {gt: 0}];
    UpdateUserInfo info = 2;
}

message DeleteRequest {
    int64 id = 1 [(validate.rules).int64 = {gt: 0}];
}